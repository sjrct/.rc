#!/usr/bin/env fish
# vim:foldmethod=marker
#
# Install or update my RC files installation
# I try to make this idempotent, so that you (I) can rerun it fine
#


#: utility functions {{{
function confirm -a message
  while true
    read -l -P "$mesage [y/n]" confirm

    switch $confirm
      case Y y
        return 0
      case N n
        return 1
    end
  end
end

function link -a from to
  echo "Linking $from -> $to"
  echo $to >> $RC/installed_files
  mkdir -p (dirname $to)
  ln -s $from $to
end

function download_file -a dest url
  set ckpath $RC/download_cache/checksums.sha1
  set tmp $RC/download_cache/(basename $dest)
  mkdir -p $RC/download_cache

  if [ ! -e $tmp ]
    wget -O $tmp $url
  end

  if [ -e $ckpath ]
    and grep $tmp $ckpath &> /dev/null
    # validate the file
    if not grep $tmp $ckpath | sha1sum -c - &> /dev/null
      echo "Invalid checksum for $path ($tmp)"
      exit 1
    end
  else
    # append the checksum
    sha1sum $tmp >> $ckpath
  end

  if [ ! -e $dest ]
    link $tmp $dest
  else if not cmp $tmp $dest
    echo "Refusing to clobber existing file: $dest"
  end
end

function try_link -a from to
  if [ -e $to ]
    if [ ! -L $to ]
      or [ (readlink -f $to) != (readlink -f $from) ]
      echo "Refusing to clobber existing file: $to"
      exit 1
    end
  else
    link $from $to
  end
end

function try_link_r -a from_dir to_dir
  for file in (find $from_dir -type f -exec basename '{}' \;)
    try_link $from_dir/$file $to_dir/$file
  end
end
#:}}}

#: dependency check {{{
set deps fish wget git
set recs vim nvim fzf fisher eza wezterm bat \
         pyright clangd vim-language-server

# Check if dependencies exist
for dep in $deps
  if not type -q $dep
    echo "Warning: Required dependency $dep does not exist."
    echo "Install and retry."
    exit 1
  end
end

for rec in $recs
  if not type -q $rec
    echo "Warning: Missing recommended dependency $rec."
  end
end
#: }}}

begin
  # Configure information about where to install
  set RC (realpath (dirname (status -f)))
  set INST $HOME
  if [ (count $argv) -gt 0 ]
    set INST $argv[1]
  end
  echo Installing to $INST
  echo RC files located at $RC

  try_link $RC/zshrc $INST/.zshrc
  try_link $RC/vimrc $INST/.vimrc
  try_link_r $RC/fish $INST/.config/fish
  try_link_r $RC/nvim $INST/.config/nvim
  try_link_r $RC/kitty $INST/.config/kitty
  try_link $RC/wezterm.lua $INST/.wezterm.lua
  try_link $RC/bashrc $INST/.bashrc

  # Tell git that local rc file changes can be ignored
  #git -C $RC update-index --assume-unchanged local/*

  # Make vim directories
  mkdir -p $INST/.vim/autoload
  mkdir -p $INST/.vim/colors
  mkdir -p $INST/.vim/undo
  mkdir -p $INST/.vim/tmp
  mkdir -p $INST/.vim/ftplugin

  # Install vim plug
  set PLUG_URL https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  download_file $INST/.vim/autoload/plug.vim $PLUG_URL
  download_file $INST/.local/share/nvim/site/autoload/plug.vim $PLUG_URL

  # Install moonshine colorscheme
  try_link $RC/moonshine.vim $INST/.vim/colors/moonshine.vim
  try_link $RC/moonshine.vim $INST/.local/share/nvim/site/colors/moonshine.vim

  download_file $INST/.config/kitty/smart_scroll.py "https://raw.githubusercontent.com/yurikhan/kitty-smart-scroll/refs/heads/master/smart_scroll.py"

  if type -q wezterm
    wezterm shell-completion --shell fish > ~/.config/fish/conf.d/wezterm.fish
  end

  if type -q eza
    download_file $INST/.config/fish/conf.d/eza.fish "https://raw.githubusercontent.com/eza-community/eza/refs/heads/main/completions/fish/eza.fish"
  end

  # Generic git config stuff
  #   Credits:
  #     lg1, lg2 - Slipp D. Thompson (stackoverflow)
  #     ll - durdn
  git config --global push.default current
  git config --global pull.rebase true
  git config --global alias.a add
  git config --global alias.b branch
  git config --global alias.cm commit
  git config --global alias.cl clone
  git config --global alias.co checkout
  git config --global alias.d 'diff --color'
  git config --global alias.df 'diff --color'
  git config --global alias.lg '!git lg1'
  git config --global alias.lg1 "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
  git config --global alias.lg2 "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"
  git config --global alias.ll 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'
  git config --global alias.ph 'push'
  git config --global alias.pl 'pull'
  git config --global alias.s 'status'
  git config --global alias.st 'status'
end

#!/usr/bin/env fish
# vim:foldmethod=marker
#
# Install or update my RC files installation
# I try to make this idempotent, so that you (I) can rerun it fine
#


#: utility functions {{{
function confirm -a message
  while true
    read -l -P "$mesage [y/n]" confirm

    switch $confirm
      case Y y
        return 0
      case N n
        return 1
    end
  end
end

function download_file -a dest url
  set $ckpath download_cache/checksums.sha1
  set tmp download_cache/(basename $dest)
  mkdir -p download_cache

  if [ ! -e $tmp ]
    wget -O $tmp $url
  end

  if grep $tmp $ckpath
    # validate the file
    if not grep $tmp $ckpath | sha1sum -c -
      echo "Invalid checksum for $path ($tmp)"
      exit 1
    end
  else
    # append the checksum
    sha1sum $tmp >> $ckpath
  end

  mkdir -p (dirname $dest)
  cp -v $tmp $dest
end

function try_link -a from to
  if [ -e $to ]
    if [ ! -L $to ]
      or [ (readlink -f $to) != (readlink -f $from) ]
      echo Refusing to clobber existing file: $to
      exit 1
    end
  else
    echo Linking $from -> $to
    ln -s $from $to
  end
end

function try_link_r -a $from_dir $to_dir
  for file in (find $from_dir -type f -printf "%P\n")
    try_link $from_dir/$file $to_dir/$file
  end
end
#:}}}

#: dependency check {{{
set deps fish wget git
set recs vim nvim fzf fisher
# Check if dependencies exist
for dep in $deps
  if which $dep &> /dev/null
  else
    echo "Warning: Required dependency $dep does not exist."
    echo "Install and retry."
    exit 1
  end
end

for rec in $recs
  if not which $rec &> /dev/null
    echo "Warning: Missing recommended dependency $rec."
  end
end
#: }}}

# Configure information about where to install
set RC (dirname $(pwd)/$0)
set INST $HOME
if [ -n $argv[1] ]
  set INST $argv[1]
end
echo Installing to $INST
echo RC files located at $RC

try_link $RC/zshrc $INST/.zshrc
try_link $RC/vimrc $INST/.vimrc
try_link $RC/fish/config.fish $INST/.config/fish/config.fish

# Tell git that local rc file changes can be ignored
git -C $RC update-index --assume-unchanged local/*

# Make vim directories
mkdir -p $INST/.vim/autoload
mkdir -p $INST/.vim/colors
mkdir -p $INST/.vim/undo
mkdir -p $INST/.vim/tmp
mkdir -p $INST/.vim/ftplugin

# Install vim plug
set PLUG_URL https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
download_file $INST/.vim/autoload/plug.vim $PLUG_URL
download_file $INST/.local/share/nvim/site/autoload/plug.vim $PLUG_URL

# Install moonshine colorscheme
try_link $RC/moonshine.vim $INST/.vim/colors/moonshine.vim
try_link $RC/moonshine.vim $INST/.local/share/nvim/site/colors/moonshine.vim

# Generic git config stuff
#   Credits:
#     lg1, lg2 - Slipp D. Thompson (stackoverflow)
#     ll - durdn
git config --global push.default current
git config --global pull.rebase true
git config --global alias.lg1 "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
git config --global alias.lg2 "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"
git config --global alias.lg '!git lg2'
git config --global alias.ll 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'
git config --global alias.co checkout
git config --global alias.cm commit
git config --global alias.a add
git config --global alias.d 'diff --color'
git config --global alias.df 'diff --color'
git config --global alias.s 'status'
git config --global alias.st 'status'
